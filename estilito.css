/* 
 Estilos generales para el cuerpo del documento 
 */
 body {
    font-family: 'Work Sans',Arial, sans-serif; /* Establece la tipografía del documento a Arial, y si no está disponible, usará cualquier fuente sans-serif. */
    margin: 0; /* Elimina cualquier margen predeterminado del cuerpo. */
    padding: 3px; /* Agrega un relleno de 20px en todos los lados del cuerpo para separar el contenido del borde del navegador. */
}

/* 
 Estilos para el contenedor principal de la cuadrícula 
 */
.grid-container {
    display: grid; /* Establece el tipo de display a grid. */
    grid-template-columns: 1fr; /* Crea una sola columna que ocupa todo el ancho disponible. */
    gap: 20px; /* Establece un espacio de 20px entre cada elemento del grid. */
    margin-bottom: 20px; /* Agrega un margen en la parte inferior para separar este grid de otros contenidos/elementos en la página. */
}

/* 
 Estilos para cada elemento dentro del contenedor de la cuadrícula 
 */
.grid-item {
    /*background-color: #f3f3f3; /* Da un color de fondo claro a cada elemento del grid. */
    padding: 20px; /* Agrega un relleno interno de 20px en todos los lados del elemento. */
   /*  border: 1px solid #ddd;  *//* Proporciona un borde sutil alrededor del elemento. */
    /* border-radius: 4px; */ /* Redondea ligeramente las esquinas del elemento. */
    text-align: center; /* Centra el texto horizontalmente dentro del elemento. */
}

/* 
 Estilos específicos para la cabecera 
 */
.div-header {
    background-color: beige; /* Establece el color de fondo a beige. */
    display: flex; /* Usa flexbox para organizar el contenido interior. */
    justify-content: center; /* Centra los elementos hijos horizontalmente. */
    align-items: center; /* Centra los elementos hijos verticalmente. */
    padding: 10px 0; /* Agrega un relleno vertical de 10px. */
    flex-wrap: wrap; /* Permite que los elementos hijos se envuelvan al siguiente renglón si no hay espacio. */
    width: 100%; /* Asegura que el contenedor ocupe todo el ancho disponible. */
}

/* 
 Estilos para las imágenes dentro de .div-header 
 */
.header-image {
    width: 100px; /* Establece el ancho de la imagen a 100px. */
    height: 100px; /* Establece el alto de la imagen a 100px. */
    object-fit: cover; /* Asegura que la imagen cubra completamente el espacio sin distorsionarse. */
    margin: 0 10px; /* Establece un margen horizontal de 10px a ambos lados de la imagen. */
}

/* 
 Estilos para contenedores de cuadrícula con dos elementos 
 */
.two-items {
    grid-template-columns: repeat(2, 1fr); /* Divide el grid en dos columnas iguales. */
}
/* Estilos para el contenedor del cuarto grid */
.grid-container.single-item-single {
    display: flex;           /* Utilizamos flexbox para centrar el contenido */
    justify-content: center; /* Centra el contenido horizontalmente */
    align-items: center;     /* Centra el contenido verticalmente */
    height: auto;           /* Ocupa toda la altura de la ventana del navegador */  
    padding: 2em;            /* Espaciado interno */
}

.grid-item.centered-content-singleSingle {
    width: 80%;              /* Ancho del contenido centrado, ajusta según necesidad */
    text-align: center;      /* Centra el título y el texto dentro del elemento */
    height: auto; 
    background-color: transparent;
}

.grid-container.single-item-single > .grid-item:nth-child(2) h2 {
    color: #4a90e2;
    margin-top: 0;
    margin-bottom: 10px;
    font-weight: 1000;
}

.grid-container.single-item-single > .grid-item:nth-child(2) p {
    margin-top: 0;
}

/* 
 Estilos para un contenedor de cuadrícula que contiene un elemento con tres objetos 
 */
.three-objects .grid-item {
    display: flex; /* Usa flexbox para organizar los objetos. */
    justify-content: space-between; /* Distribuye los objetos uniformemente con espacio máximo entre ellos. */
}

.three-objects .object {
    flex-basis: calc(33.33% - 10px); /* Establece la base para cada objeto a aproximadamente un tercio del espacio, restando 10px. */
    text-align: center; /* Centra el texto dentro del objeto. */
    background-color: #ccc; /* Da un color de fondo gris a cada objeto. */
    padding: 10px; /* Añade un relleno de 10px en todos los lados del objeto. */
    border-radius: 5px; /* Redondea ligeramente las esquinas del objeto. */
}

.rounded-image {
    width: 80%;                /* Ocupa el 80% del ancho del div "half" */
    max-width: 400px;         /* Limita el tamaño máximo de la imagen */
    border-radius: 13px;      /* Bordes redondeados */
    display: block;           /* La imagen es un bloque */
    margin: 0 auto;           /* Centra la imagen horizontalmente */
    object-fit: cover;        /* Ajusta el contenido de la imagen al espacio disponible sin recortar */
}



.grid-container.two-items > .grid-item:nth-child(2) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: left;
    /* padding-left: 10px; */
}

.grid-container.two-items > .grid-item:nth-child(2) h2 {
    color: #4a90e2;
    margin-top: 0;
    margin-bottom: 10px;
    font-weight: 1000;
}

.grid-container.two-items > .grid-item:nth-child(2) p {
    margin-top: 0;
}


/*  acordeón */

/* Estilo básico para el acordeón */
.accordion {
    width: 100%; /* Ocupa todo el ancho */
}

.accordion-item {
    margin-top: 0.5rem;
}

.accordion-header {
    background-color: #f3f3f3;
    color: #333;
    cursor: pointer;
    padding: 1rem;
    border: none;
    text-align: left;
    border-radius: 4px;
    width: 100%;
    outline: none;
    transition: background-color 0.3s ease;
}

.accordion-header:hover {
    background-color: #ddd;
}

/* Estilo para el contenido desplegable */
.accordion-content {
    background-color: #f9f9f9;
    padding: 0.5rem 1rem;
    display: none; /* inicialmente oculto */
    opacity: 0;
    transform: translateY(-1em); /* desplaza el contenido hacia arriba */
    transition: opacity 0.3s, transform 0.3s;
}

/* Estilo cuando el contenido está visible */
.accordion-content.show {
    display: block;
    opacity: 1;
    transform: translateY(0); /* desplaza el contenido a su posición original */
}


/*fin acordeon */



/*Inicio seccion 3*/

.centered-content {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    height: 100px;
    margin-top: 50px;
}

.custom-title {
    color: #4a90e2;  /* Usando el mismo color del h3 en el segundo grid */
    margin-bottom: 20px;  /* Espacio entre el título y el botón */
    font-weight: 1000;
    text-align: center;
}

.green-button {
    background-color: green;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.green-button:hover {
    background-color: darkgreen;
}

/*
fin seccion
*/

/* 
 Adaptaciones para pantallas medianas, como tabletas 
 */
@media (max-width: 768px) {
    .grid-container {
        grid-template-columns: 1fr; /* Asegura que todos los elementos ocupen el ancho completo en dispositivos medianos. */
    }
}

/* 
 Adaptaciones para pantallas pequeñas, como teléfonos móviles 
 */
@media (max-width: 480px) {
    .three-objects .grid-item {
        flex-direction: column; /* Organiza los objetos verticalmente. */
    }
    
    .three-objects .object {
        margin-bottom: 10px; /* Añade un margen en la parte inferior de cada objeto para espacio entre ellos. */
        flex-basis: 100%; /* Asegura que cada objeto ocupe el ancho completo en dispositivos pequeños. */
    }
}
